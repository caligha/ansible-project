---
- name: Install Git, Java, Maven, and Apache Tomcat
  hosts: all
  become: yes
  vars:
    java_packages:
      CentOS: java-1.8.0-openjdk
      Ubuntu: openjdk-8-jdk
      Linux: java-1.8.0-openjdk
    maven_version: 3.9.6
    tomcat_version: 9
  tasks:
    - name: Install Git
      package:
        name: git
        state: present

    - name: Install Java
      package:
        name: "{{ java_packages[ansible_distribution] }}"
        state: present
      when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"

    - name: Install Java for Ubuntu
      become: yes
      apt:
        name: "{{ java_packages['Ubuntu'] }}"
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Download and extract Maven
      unarchive:
        src: "http://mirror.linux-ia64.org/apache/maven/maven-{{ maven_version.split('.')[0] }}/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz"
        dest: "/opt/"
        remote_src: yes
      when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"

    - name: Set up Maven environment variables
      environment:
        name: M2_HOME
        value: "/opt/apache-maven-{{ maven_version }}"
      when: ansible_os_family == "RedHat" or ansible_os_family == "Debian"

    - name: Download and extract Maven for Ubuntu
      become: yes
      unarchive:
        src: "http://mirror.linux-ia64.org/apache/maven/maven-{{ maven_version.split('.')[0] }}/{{ maven_version }}/binaries/apache-maven-{{ maven_version }}-bin.tar.gz"
        dest: "/opt/"
        remote_src: yes
      when: ansible_distribution == "Ubuntu"

    - name: Set up Maven environment variables for Ubuntu
      become: yes
      environment:
        name: M2_HOME
        value: "/opt/apache-maven-{{ maven_version }}"
      when: ansible_distribution == "Ubuntu"

    - name: Install Apache Tomcat
      become_user: root
      get_url:
        url: "https://downloads.apache.org/tomcat/tomcat-{{ tomcat_version }}/v{{ tomcat_version }}.{{ tomcat_version_minor }}/bin/apache-tomcat-{{ tomcat_version }}.{{ tomcat_version_minor }}.tar.gz"
        dest: "/tmp/apache-tomcat-{{ tomcat_version }}.{{ tomcat_version_minor }}.tar.gz"
      register: tomcat_download

    - name: Extract Tomcat tarball
      become_user: root
      ansible.builtin.unarchive:
        src: "/tmp/apache-tomcat-{{ tomcat_version }}.{{ tomcat_version_minor }}.tar.gz"
        dest: "/opt/"
        remote_src: yes
      when: tomcat_download.changed

    - name: Start Apache Tomcat
      systemd:
        name: tomcat
        enabled: yes
        state: started

